{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/produto/produto.component.css","webpack:///./src/app/produto/produto.component.html","webpack:///./src/app/produto/produto.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-produto></app-produto>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'front-end';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';  \nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { ProdutoComponent } from './produto/produto.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProdutoComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    CommonModule,\n    NgxPaginationModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <header>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8\\\">\\n        <h3> LJLeandro </h3>\\n      </div>\\n  \\n      <div class=\\\"col-md-4\\\">\\n        <input type='text' [(ngModel)]='filtro' placeholder=\\\"Lista de Produtos\\\" />\\n      </div>\\n    </div>\\n  </header>\\n  \\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div *ngIf=\\\"filtro\\\">\\n        <label> {{filtro}}</label>\\n      </div>\\n      <div *ngIf=\\\"!filtro\\\">\\n          <label> {{titulo}}</label>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"row\\\">\\n      <table class=\\\"table table-responsive\\\">\\n        <tbody>\\n          <tr *ngFor=\\\"let p of produtosPesquisados | paginate: { itemsPerPage: itemsPaginas, currentPage: p}\\\">\\n            <td>{{p.nome}}</td>\\n            <td>R$ {{p.preco}},00</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <select [(ngModel)]=\\\"itemsPaginas\\\">\\n          <option value=\\\"10\\\">10 produtos por página</option>\\n          <option value=\\\"20\\\">20 produtos por página</option>\\n          <option value=\\\"30\\\">30 produtos por página</option>\\n        </select>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n          <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Iproduto } from './iproduto';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-produto',\n  templateUrl: './produto.component.html',\n  styleUrls: ['./produto.component.css']\n})\nexport class ProdutoComponent implements OnInit {\n\n  produtos: Iproduto[];\n  produtosPesquisados: Iproduto[] = [];\n  titulo: string = 'Lista de Produtos';\n  p: number = 1;\n  itemsPaginas: number = 10;\n  private _url: string = 'https://enigmatic-castle-62130.herokuapp.com/ammovarejo/produtos';\n\n  _filtro: string;\n  get filtro(): string {\n    return this._filtro;\n  }\n  set filtro(value: string) {\n    this._filtro = value;\n    this.produtosPesquisados = this.filtro ? this.performFilter(this.filtro) : this.produtos;\n  }\n\n  ngOnInit() {\n    this.http.get(this._url).subscribe(\n      data => {\n        this.produtos = <Iproduto[]> JSON.parse(data.toString());\n        this.produtosPesquisados = this.produtos;\n    });\n  }\n\n  constructor(private http: HttpClient) {\n    this.produtosPesquisados = this.produtos;\n  }\n\n  performFilter(parametro: string) : Iproduto[] {\n    parametro = parametro.toLocaleLowerCase();\n\n    return this.produtos.filter((produto: Iproduto) => \n      produto.nome.toLocaleLowerCase().indexOf(parametro) !== -1);\n  }  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}